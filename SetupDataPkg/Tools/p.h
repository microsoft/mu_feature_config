/** @file p.h

  Autogenerated configuration headers from mu_feature_config

  Copyright (c) Microsoft Corporation.
  SPDX-License-Identifier: BSD-2-Clause-Patent

**/

#ifndef P_H
#define P_H
// The config public header must be included prior to this file
// Generated Header
//  Script: KnobService.py
//  Schema: ..\..\..\mu_tiano_platforms\Platforms\QemuQ35Pkg\CfgData\QemuQ35PkgCfgData.xml
//  Profile: ..\..\..\mu_tiano_platforms\Platforms\QemuQ35Pkg\CfgData\gfxOffQemuQ35PkgCfgData.csv

// Profile gfxOffQemuQ35PkgCfgData
typedef struct {
  BOOLEAN PowerOnPort0;
} PROFILE_gfxOffQemuQ35PkgCfgData_DATA;

PROFILE_gfxOffQemuQ35PkgCfgData_DATA ProfilegfxOffQemuQ35PkgCfgDataData = {
    .PowerOnPort0=FALSE,
};

#define PROFILE_GFXOFFQEMUQ35PKGCFGDATA_OVERRIDES
#define PROFILE_GFXOFFQEMUQ35PKGCFGDATA_OVERRIDES_COUNT 1
KNOB_OVERRIDE ProfilegfxOffQemuQ35PkgCfgDataOverrides[PROFILE_GFXOFFQEMUQ35PKGCFGDATA_OVERRIDES_COUNT + 1] = {
  {
    .Knob = KNOB_PowerOnPort0,
    .Value = &ProfilegfxOffQemuQ35PkgCfgDataData.PowerOnPort0,
  },
  {
    .Knob = KNOB_MAX,
    .Value = NULL,
  }
};


#define PROFILE_COUNT 1
PROFILE gProfileData[PROFILE_COUNT + 1] = 
{
  {
    .Overrides = ProfilegfxOffQemuQ35PkgCfgDataOverrides,
    .OverrideCount = 1,
  },
  {
    .Overrides = NULL,
    .OverrideCount = 0,
  }
};

UINTN gNumProfiles = PROFILE_COUNT;
#endif // P_H
